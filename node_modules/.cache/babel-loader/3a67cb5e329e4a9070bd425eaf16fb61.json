{"ast":null,"code":"var _jsxFileName = \"/home/NIX/samoilenko/git/typescript/weather/src/components/form/index.tsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nclass Form extends React.Component {\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: event => this.props.onGetWeather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"city\",\n      placeholder: \"City...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"country\",\n      placeholder: \"Country...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"Get Weather\"));\n  }\n\n}\n\nexport default connect(state => ({\n  store: state\n}), dispatch => ({\n  onGetWeather: async e => {\n    console.log(\"run function\");\n    e.stopPropagation();\n    e.nativeEvent.stopImmediatePropagation();\n    const _e$target = e.target,\n          city = _e$target.city,\n          country = _e$target.country;\n    const apiCall = await fetch(\"http://localhost:8181/cxf/weather/city/\".concat(city, \",\").concat(country));\n    const data = await apiCall.json();\n    console.log(data);\n\n    if (data.cod !== \"404\") {\n      dispatch({\n        type: \"SET_WEATHER\",\n        data: data\n      });\n    } else {\n      dispatch({\n        type: \"SET_ERROR\"\n      });\n    }\n  }\n}))(Form);","map":{"version":3,"sources":["/home/NIX/samoilenko/git/typescript/weather/src/components/form/index.tsx"],"names":["React","connect","Form","Component","render","event","props","onGetWeather","state","store","dispatch","e","console","log","stopPropagation","nativeEvent","stopImmediatePropagation","target","city","country","apiCall","fetch","data","json","cod","type"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAOA,MAAMC,IAAN,SAAmBF,KAAK,CAACG,SAAzB,CAA2C;AACvCC,EAAAA,MAAM,GAAG;AACL,WACI;AAAM,MAAA,QAAQ,EAAGC,KAAD,IAAW,KAAKC,KAAL,CAAWC,YAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,MAAxB;AAA+B,MAAA,WAAW,EAAC,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,SAAxB;AAAkC,MAAA,WAAW,EAAC,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHJ,CADJ;AAOH;;AATsC;;AAY3C,eAAeN,OAAO,CAClBO,KAAK,KAAK;AACNC,EAAAA,KAAK,EAAED;AADD,CAAL,CADa,EAIlBE,QAAQ,KAAK;AACTH,EAAAA,YAAY,EAAE,MAAOI,CAAP,IAAgD;AAC1DC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAF,IAAAA,CAAC,CAACG,eAAF;AACAH,IAAAA,CAAC,CAACI,WAAF,CAAcC,wBAAd;AAH0D,sBAI7BL,CAAC,CAACM,MAJ2B;AAAA,UAInDC,IAJmD,aAInDA,IAJmD;AAAA,UAI7CC,OAJ6C,aAI7CA,OAJ6C;AAK1D,UAAMC,OAAO,GAAG,MAAMC,KAAK,kDACmBH,IADnB,cAC2BC,OAD3B,EAA3B;AAEA,UAAMG,IAAI,GAAG,MAAMF,OAAO,CAACG,IAAR,EAAnB;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAYS,IAAZ;;AACA,QAAIA,IAAI,CAACE,GAAL,KAAa,KAAjB,EAAwB;AACpBd,MAAAA,QAAQ,CAAC;AAACe,QAAAA,IAAI,EAAE,aAAP;AAAsBH,QAAAA,IAAI,EAAEA;AAA5B,OAAD,CAAR;AACH,KAFD,MAEO;AACHZ,MAAAA,QAAQ,CAAC;AAACe,QAAAA,IAAI,EAAE;AAAP,OAAD,CAAR;AACH;AACJ;AAfQ,CAAL,CAJU,CAAP,CAqBbvB,IArBa,CAAf","sourcesContent":["import React from \"react\"\nimport {connect} from \"react-redux\";\n\n\ninterface IProps {\n    onGetWeather: Function;\n}\n\nclass Form extends React.Component<IProps> {\n    render() {\n        return (\n            <form onSubmit={(event) => this.props.onGetWeather}>\n                <input type=\"text\" name=\"city\" placeholder=\"City...\"/>\n                <input type=\"text\" name=\"country\" placeholder=\"Country...\"/>\n                <button>Get Weather</button>\n            </form>\n        );\n    }\n}\n\nexport default connect(\n    state => ({\n        store: state\n    }),\n    dispatch => ({\n        onGetWeather: async (e: React.FormEvent<HTMLInputElement>) => {\n            console.log(\"run function\");\n            e.stopPropagation();\n            e.nativeEvent.stopImmediatePropagation();\n            const {city, country}: any = e.target;\n            const apiCall = await fetch(\n                `http://localhost:8181/cxf/weather/city/${city},${country}`);\n            const data = await apiCall.json();\n            console.log(data);\n            if (data.cod !== \"404\") {\n                dispatch({type: \"SET_WEATHER\", data: data})\n            } else {\n                dispatch({type: \"SET_ERROR\"})\n            }\n        }\n    })\n)(Form);"]},"metadata":{},"sourceType":"module"}