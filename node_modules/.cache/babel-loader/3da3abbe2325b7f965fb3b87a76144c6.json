{"ast":null,"code":"var _jsxFileName = \"/home/NIX/samoilenko/git/typescript/src/components/weather/index.tsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nclass Weather extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"weather__info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, Object.keys(this.props.store).map((point, index) => point === \"error\" ? React.createElement(\"span\", {\n      className: \"weather__error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, this.props.store[point]) : (this.props.store[point] || this.props.store[point] === 0) && React.createElement(\"p\", {\n      key: index,\n      className: \"weather__key\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, point, React.createElement(\"span\", {\n      className: \"weather__value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, this.props.store[point]))));\n  }\n\n}\n\nexport default connect(state => ({\n  store: state\n}))(Weather);","map":{"version":3,"sources":["/home/NIX/samoilenko/git/typescript/src/components/weather/index.tsx"],"names":["React","connect","Weather","Component","render","Object","keys","props","store","map","point","index","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAMA,MAAMC,OAAN,SAAsBF,KAAK,CAACG,SAA5B,CAA8C;AAE1CC,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKC,MAAM,CAACC,IAAP,CAAY,KAAKC,KAAL,CAAWC,KAAvB,EAA8BC,GAA9B,CAAkC,CAACC,KAAD,EAAQC,KAAR,KAC/BD,KAAK,KAAK,OAAV,GAAoB;AAAM,MAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkC,KAAKH,KAAL,CAAWC,KAAX,CAAiBE,KAAjB,CAAlC,CAApB,GACI,CAAC,KAAKH,KAAL,CAAWC,KAAX,CAAiBE,KAAjB,KAA2B,KAAKH,KAAL,CAAWC,KAAX,CAAiBE,KAAjB,MAA4B,CAAxD,KACA;AAAG,MAAA,GAAG,EAAEC,KAAR;AAAe,MAAA,SAAS,EAAC,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,KADL,EAEI;AAAM,MAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkC,KAAKH,KAAL,CAAWC,KAAX,CAAiBE,KAAjB,CAAlC,CAFJ,CAHP,CADL,CADJ;AAYH;;AAfyC;;AAkB9C,eAAeT,OAAO,CAClBW,KAAK,KAAK;AACNJ,EAAAA,KAAK,EAAEI;AADD,CAAL,CADa,CAAP,CAIbV,OAJa,CAAf","sourcesContent":["import React from \"react\"\nimport {connect} from \"react-redux\";\n\ninterface IProps {\n    store: any;\n}\n\nclass Weather extends React.Component<IProps> {\n\n    render() {\n        return (\n            <div className=\"weather__info\">\n                {Object.keys(this.props.store).map((point, index) =>\n                    point === \"error\" ? <span className=\"weather__error\">{this.props.store[point]}</span> :\n                        (this.props.store[point] || this.props.store[point] === 0) &&\n                        <p key={index} className=\"weather__key\">\n                            {point}\n                            <span className=\"weather__value\">{this.props.store[point]}</span>\n                        </p>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    state => ({\n        store: state\n    }),\n)(Weather);"]},"metadata":{},"sourceType":"module"}