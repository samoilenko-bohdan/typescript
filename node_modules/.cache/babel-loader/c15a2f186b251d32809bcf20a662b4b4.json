{"ast":null,"code":"var _jsxFileName = \"/home/NIX/samoilenko/git/typescript/weather/src/index.tsx\";\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport './App.css';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nfunction reducer(state = {}, action) {\n  if (action.type === \"SET_WEATHER\") {\n    return {\n      \"Location: \": action.data.cityName,\n      \"Temperature: \": action.data.temp + \" ℃\",\n      \"Minimum temperature: \": action.data.minTemp + \" ℃\",\n      \"Maximum temperature: \": action.data.maxTemp + \" ℃\",\n      \"Clouds: \": action.data.clouds + \" %\",\n      \"Wind speed: \": action.data.windSpeed + \" m/s\",\n      \"Pressure: \": action.data.pressure + \" hpa\",\n      \"Humidity: \": action.data.humidity + \" %\",\n      \"Description: \": action.data.description,\n      error: undefined\n    };\n  } else if (action.type === \"SET_ERROR\") {\n    var error = {\n      error: \"\"\n    };\n    error.error = \"The city is not found. Please enter the values or change city name\";\n    return error;\n  } else {\n    return state;\n  }\n}\n\nconst store = createStore(reducer);\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56\n  },\n  __self: this\n})), document.getElementById('root'));","map":{"version":3,"sources":["/home/NIX/samoilenko/git/typescript/weather/src/index.tsx"],"names":["React","ReactDOM","App","createStore","Provider","reducer","state","action","type","data","cityName","temp","minTemp","maxTemp","clouds","windSpeed","pressure","humidity","description","error","undefined","store","render","document","getElementById"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,WAAP;AACA,SAAQC,WAAR,QAA0B,OAA1B;AACA,SAAQC,QAAR,QAAuB,aAAvB;;AAsBA,SAASC,OAAT,CAAiBC,KAAK,GAAG,EAAzB,EAA6BC,MAA7B,EAA8C;AAC1C,MAAIA,MAAM,CAACC,IAAP,KAAgB,aAApB,EAAmC;AAC/B,WAAO;AACH,oBAAcD,MAAM,CAACE,IAAP,CAAYC,QADvB;AAEH,uBAAkBH,MAAM,CAACE,IAAP,CAAYE,IAAZ,GAAmB,IAFlC;AAGH,+BAAyBJ,MAAM,CAACE,IAAP,CAAYG,OAAZ,GAAsB,IAH5C;AAIH,+BAAyBL,MAAM,CAACE,IAAP,CAAYI,OAAZ,GAAsB,IAJ5C;AAKH,kBAAYN,MAAM,CAACE,IAAP,CAAYK,MAAZ,GAAqB,IAL9B;AAMH,sBAAgBP,MAAM,CAACE,IAAP,CAAYM,SAAZ,GAAwB,MANrC;AAOH,oBAAcR,MAAM,CAACE,IAAP,CAAYO,QAAZ,GAAuB,MAPlC;AAQH,oBAAcT,MAAM,CAACE,IAAP,CAAYQ,QAAZ,GAAuB,IARlC;AASH,uBAAiBV,MAAM,CAACE,IAAP,CAAYS,WAT1B;AAUHC,MAAAA,KAAK,EAAEC;AAVJ,KAAP;AAYH,GAbD,MAaO,IAAIb,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;AACpC,QAAIW,KAAa,GAAG;AAACA,MAAAA,KAAK,EAAE;AAAR,KAApB;AACAA,IAAAA,KAAK,CAACA,KAAN,GAAc,oEAAd;AACA,WAAOA,KAAP;AACH,GAJM,MAIA;AACH,WAAOb,KAAP;AACH;AACJ;;AAED,MAAMe,KAAK,GAAGlB,WAAW,CAACE,OAAD,CAAzB;AAEAJ,QAAQ,CAACqB,MAAT,CACI,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADJ,EAIIE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJJ","sourcesContent":["import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport './App.css'\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\n\ninterface IData {\n    cityName: string;\n    temp: string;\n    minTemp: string;\n    maxTemp: string;\n    clouds: string;\n    windSpeed: string;\n    pressure: string;\n    humidity: string;\n    description: string;\n}\n\ninterface IAction {\n    type: string;\n    data: IData;\n}\n\ninterface IError {\n    error: string;\n}\nfunction reducer(state = {}, action: IAction) {\n    if (action.type === \"SET_WEATHER\") {\n        return {\n            \"Location: \": action.data.cityName,\n            \"Temperature: \":  action.data.temp + \" ℃\",\n            \"Minimum temperature: \": action.data.minTemp + \" ℃\",\n            \"Maximum temperature: \": action.data.maxTemp + \" ℃\",\n            \"Clouds: \": action.data.clouds + \" %\",\n            \"Wind speed: \": action.data.windSpeed + \" m/s\",\n            \"Pressure: \": action.data.pressure + \" hpa\",\n            \"Humidity: \": action.data.humidity + \" %\",\n            \"Description: \": action.data.description,\n            error: undefined\n        }\n    } else if (action.type === \"SET_ERROR\") {\n        var error: IError = {error: \"\"};\n        error.error = \"The city is not found. Please enter the values or change city name\";\n        return error;\n    } else {\n        return state;\n    }\n}\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}